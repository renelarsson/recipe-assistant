version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DATA_PATH: "data/recipes_clean.csv"
      ES_URL: "http://elasticsearch:9200"
      ES_USER: ${ES_USER:-}
      ES_PASSWORD: ${ES_PASSWORD:-}
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
      OTEL_TRACES_EXPORTER: "otlp"
      OTEL_PYTHON_LOG_LEVEL: "debug"
      OTEL_SERVICE_NAME: "recipe-assistant"
    ports:
      - "${APP_PORT:-5000}:5000"
      - "8000:8000"

    depends_on:
      - postgres
      - elasticsearch
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    command: "opentelemetry-instrument gunicorn -b 0.0.0.0:5000 recipe_assistant.app:app"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=${ES_SECURITY_ENABLED:-false}
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=${ES_PASSWORD:-changeme}
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_USERS_AUTO_ASSIGN_ORG=true
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-your_secret_key_here}
    depends_on:
      - postgres

  tempo:
    image: grafana/tempo:2.5.0
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./grafana/tempo-config.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"
      - "4318:4318"

  loki:
    image: grafana/loki:2.9.7
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./grafana/loki-config.yaml:/etc/loki/local-config.yaml
      - ./grafana/loki-data:/loki
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.7
    volumes:
      - ./grafana/promtail-config.yaml:/etc/promtail/config.yaml
      - /var/log:/var/log
      - ./logs:/app/logs
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./grafana/prometheus-config.yaml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - app
    restart: unless-stopped

  ingestion:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -u ingestion/dlt_pipeline.py
    ports:
      - "8001:8001"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - elasticsearch

  cli:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -u recipe_assistant/cli.py
    ports:
      - "8002:8002"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - app

  ingest:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -u recipe_assistant/ingest.py
    ports:
      - "8003:8003"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - elasticsearch

volumes:
  postgres_data:
  grafana_data:
  esdata:
  loki_data: